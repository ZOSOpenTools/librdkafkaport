diff --git a/src/rdkafka_broker.c b/src/rdkafka_broker.c
index 685cf5bf..3c97f3e6 100644
--- a/src/rdkafka_broker.c
+++ b/src/rdkafka_broker.c
@@ -38,7 +38,7 @@
  * src/rd.h defines _POSIX_SOURCE to be 200809L, which corresponds to XPG7,
  * which itself is not compatible with _XOPEN_SOURCE on that platform.
  */
-#if !defined(_AIX) && !defined(__sun)
+#if !defined(_AIX) && !defined(__sun) && !defined(__MVS__)
 #define _XOPEN_SOURCE
 #endif
 #include <signal.h>
@@ -49,6 +49,7 @@
 #include <string.h>
 #include <ctype.h>
 
+
 #include "rd.h"
 #include "rdaddr.h"
 #include "rdkafka_int.h"
@@ -5508,11 +5509,25 @@ int32_t rd_kafka_broker_id(rd_kafka_broker_t *rkb) {
  * Locality: any thread
  */
 const char *rd_kafka_broker_name(rd_kafka_broker_t *rkb) {
+#ifdef __MVS__
+        static tls_t tsl_ret;
+        static tls_t tls_reti;
+        char **ret = NULL;
+        int *reti_p = NULL;
+        tsl_ret.sz = sizeof(char);
+        tls_reti.sz = sizeof(int);
+        ret = __tlsArray(&tsl_ret,4,RD_KAFKA_NODENAME_SIZE);
+        reti_p = __tlsValue(&tls_reti);
+#define reti (*reti_p)
+#else
         static RD_TLS char ret[4][RD_KAFKA_NODENAME_SIZE];
         static RD_TLS int reti = 0;
-
+#endif
         reti = (reti + 1) % 4;
         mtx_lock(&rkb->rkb_logname_lock);
+#ifdef __MVS__
+        rd_snprintf(ret[reti], RD_KAFKA_NODENAME_SIZE, "%s", rkb->rkb_logname);
+#endif
         rd_snprintf(ret[reti], sizeof(ret[reti]), "%s", rkb->rkb_logname);
         mtx_unlock(&rkb->rkb_logname_lock);
 

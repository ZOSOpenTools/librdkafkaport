diff --git a/src/rdkafka_broker.c b/src/rdkafka_broker.c
index e92f008b..fa35f690 100644
--- a/src/rdkafka_broker.c
+++ b/src/rdkafka_broker.c
@@ -38,7 +38,7 @@
  * src/rd.h defines _POSIX_SOURCE to be 200809L, which corresponds to XPG7,
  * which itself is not compatible with _XOPEN_SOURCE on that platform.
  */
-#if !defined(_AIX) && !defined(__sun)
+#if !defined(_AIX) && !defined(__sun) && !defined(__MVS__)
 #define _XOPEN_SOURCE
 #endif
 #include <signal.h>
@@ -49,6 +49,7 @@
 #include <string.h>
 #include <ctype.h>
 
+
 #include "rd.h"
 #include "rdaddr.h"
 #include "rdkafka_int.h"
@@ -5500,11 +5501,28 @@ int32_t rd_kafka_broker_id(rd_kafka_broker_t *rkb) {
  * Locality: any thread
  */
 const char *rd_kafka_broker_name(rd_kafka_broker_t *rkb) {
+#ifdef __MVS__
+        static pthread_key_t ret_key;
+        static pthread_key_t reti_key;
+        static int ret_key_s = 0;
+        static int reti_key_s = 0;
+        char **ret = NULL;
+        int *reti_p = NULL;
+        GET_KEY_VAL_ARRAY(ret_key,ret_key_s,ret,sizeof(char),4,RD_KAFKA_NODENAME_SIZE)
+        GET_KEY_VAL(reti_key,reti_key_s,reti_p,sizeof(int))
+#define reti (*reti_p)
+#else
         static RD_TLS char ret[4][RD_KAFKA_NODENAME_SIZE];
         static RD_TLS int reti = 0;
+#endif
 
         reti = (reti + 1) % 4;
         mtx_lock(&rkb->rkb_logname_lock);
+#ifdef __MVS__
+        rd_snprintf(ret[reti], RD_KAFKA_NODENAME_SIZE, "%s", rkb->rkb_logname);
+        SET_KEY_VAL(reti_key,reti_p)
+        SET_KEY_VAL(ret_key,ret)
+#endif
         rd_snprintf(ret[reti], sizeof(ret[reti]), "%s", rkb->rkb_logname);
         mtx_unlock(&rkb->rkb_logname_lock);
 

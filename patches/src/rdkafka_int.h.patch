diff --git a/src/rdkafka_int.h b/src/rdkafka_int.h
index e586dd6e..be4f42b2 100644
--- a/src/rdkafka_int.h
+++ b/src/rdkafka_int.h
@@ -38,6 +38,9 @@
 typedef int mode_t;
 #endif
 
+#ifdef __MVS__
+#include <zos-tls.h>
+#endif
 #include <fcntl.h>
 
 
@@ -920,10 +923,18 @@ void rd_kafka_log0(const rd_kafka_conf_t *conf,
 
 
 
+#ifdef __MVS__
+extern rd_kafka_resp_err_t *rd_kafka_last_error_code;
+extern pthread_key_t rd_kafka_last_error_code_key;
+extern int rd_kafka_last_error_code_key_s;
+#else
 extern rd_kafka_resp_err_t RD_TLS rd_kafka_last_error_code;
+#endif
 
 static RD_UNUSED RD_INLINE rd_kafka_resp_err_t
 rd_kafka_set_last_error(rd_kafka_resp_err_t err, int errnox) {
+GET_KEY_VAL(rd_kafka_last_error_code_key,rd_kafka_last_error_code_key_s,rd_kafka_last_error_code,sizeof(rd_kafka_resp_err_t))
+
         if (errnox) {
                 /* MSVC:
                  * This is the correct way to set errno on Windows,
@@ -934,7 +945,12 @@ rd_kafka_set_last_error(rd_kafka_resp_err_t err, int errnox) {
                  * when using librdkafka as a dynamically loaded DLL. */
                 rd_set_errno(errnox);
         }
+#ifdef __MVS__
+        rd_kafka_last_error_code = &err;
+	SET_KEY_VAL(rd_kafka_last_error_code_key,rd_kafka_last_error_code)
+#else
         rd_kafka_last_error_code = err;
+#endif
         return err;
 }
 
@@ -964,7 +980,14 @@ rd_kafka_fatal_error_code(rd_kafka_t *rk) {
 
 
 extern rd_atomic32_t rd_kafka_thread_cnt_curr;
+#ifdef __MVS__
+extern char *rd_kafka_thread_name;
+extern pthread_key_t rd_kafka_thread_name_key;
+extern int rd_kafka_thread_name_key_s;
+extern size_t size_of_rd_kafka_thread_name;
+#else
 extern char RD_TLS rd_kafka_thread_name[64];
+#endif
 
 void rd_kafka_set_thread_name(const char *fmt, ...) RD_FORMAT(printf, 1, 2);
 void rd_kafka_set_thread_sysname(const char *fmt, ...) RD_FORMAT(printf, 1, 2);

diff --git a/src/rdkafka_offset.c b/src/rdkafka_offset.c
index 3da38117..dde82e4c 100644
--- a/src/rdkafka_offset.c
+++ b/src/rdkafka_offset.c
@@ -71,13 +71,30 @@
  * Convert an absolute or logical offset to string.
  */
 const char *rd_kafka_offset2str(int64_t offset) {
+#ifdef __MVS__
+        static tls_t tls_ret;
+        static tls_t tls_reti;
+        char **ret = NULL;
+        int *reti_p = NULL;
+        size_t size_of_ret = 32;
+        tls_ret.sz = sizeof(char);
+        tls_reti.sz = sizeof(int);
+        ret = __tlsArray(&tls_ret,16,32);
+        reti_p = __tlsValue(&tls_reti);
+#define reti (*reti_p)
+        reti = (reti + 1)% 16;
+#else
         static RD_TLS char ret[16][32];
         static RD_TLS int i = 0;
-
         i = (i + 1) % 16;
+#endif
 
         if (offset >= 0)
+#ifdef __MVS__
+                rd_snprintf(ret[reti], size_of_ret, "%" PRId64, offset);
+#else
                 rd_snprintf(ret[i], sizeof(ret[i]), "%" PRId64, offset);
+#endif
         else if (offset == RD_KAFKA_OFFSET_BEGINNING)
                 return "BEGINNING";
         else if (offset == RD_KAFKA_OFFSET_END)
@@ -87,12 +104,19 @@ const char *rd_kafka_offset2str(int64_t offset) {
         else if (offset == RD_KAFKA_OFFSET_INVALID)
                 return "INVALID";
         else if (offset <= RD_KAFKA_OFFSET_TAIL_BASE)
+#ifdef __MVS__
+                rd_snprintf(ret[reti], size_of_ret, "TAIL(%lld)",
+#else
                 rd_snprintf(ret[i], sizeof(ret[i]), "TAIL(%lld)",
+#endif
                             llabs(offset - RD_KAFKA_OFFSET_TAIL_BASE));
         else
+#ifdef __MVS__
+                rd_snprintf(ret[reti], size_of_ret, "%" PRId64 "?", offset);
+#else
                 rd_snprintf(ret[i], sizeof(ret[i]), "%" PRId64 "?", offset);
-
-        return ret[i];
+#endif
+        return ret[reti];
 }
 
 static void rd_kafka_offset_file_close(rd_kafka_toppar_t *rktp) {

diff --git a/src/rdlist.c b/src/rdlist.c
index 65e3eb97..8315aca8 100644
--- a/src/rdlist.c
+++ b/src/rdlist.c
@@ -29,7 +29,9 @@
 
 #include "rd.h"
 #include "rdlist.h"
-
+#ifdef __MVS__
+#include <zos-tls.h>
+#endif
 
 void rd_list_dump(const char *what, const rd_list_t *rl) {
         int i;
@@ -252,10 +254,22 @@ void *rd_list_pop(rd_list_t *rl) {
  *
  * This is true for all list comparator uses, i.e., both sort() and find().
  */
+#ifdef __MVS__
+tls_t tls_rd_list_cmp_curr;
+int (*rd_list_cmp_curr)(const void *, const void *) = NULL;
+#else
 static RD_TLS int (*rd_list_cmp_curr)(const void *, const void *);
+#endif
 
 static RD_INLINE int rd_list_cmp_trampoline(const void *_a, const void *_b) {
         const void *a = *(const void **)_a, *b = *(const void **)_b;
+#ifdef __MVS__
+        		void **tmp = NULL;
+                tls_rd_list_cmp_curr.sz = sizeof(rd_list_cmp_curr);
+                tmp = __tlsValue(&tls_rd_list_cmp_curr);
+                rd_list_cmp_curr = ((int (*)(const void *, const void *))*tmp);
+                //rd_list_cmp_curr = (int (*)(const void *, const void *))*__tlsValue(&tls_rd_list_cmp_curr);
+#endif
 
         return rd_list_cmp_curr(a, b);
 }
@@ -263,8 +277,15 @@ static RD_INLINE int rd_list_cmp_trampoline(const void *_a, const void *_b) {
 void rd_list_sort(rd_list_t *rl, int (*cmp)(const void *, const void *)) {
         if (unlikely(rl->rl_elems == NULL))
                 return;
-
+#ifdef __MVS__
+        void **tmp = NULL;
+        tls_rd_list_cmp_curr.sz = sizeof(rd_list_cmp_curr);
+        tmp = __tlsValue(&tls_rd_list_cmp_curr);
+        *(void**)tmp = (void*)cmp;
+        rd_list_cmp_curr = ((int (*)(const void *, const void *))*tmp);
+#else
         rd_list_cmp_curr = cmp;
+#endif
         qsort(rl->rl_elems, rl->rl_cnt, sizeof(*rl->rl_elems),
               rd_list_cmp_trampoline);
         rl->rl_flags |= RD_LIST_F_SORTED;
@@ -335,7 +356,16 @@ void *rd_list_find(const rd_list_t *rl,
 
         if (rl->rl_flags & RD_LIST_F_SORTED) {
                 void **r;
+#ifdef __MVS__
+                void **tmp = NULL;
+                tls_rd_list_cmp_curr.sz = sizeof(rd_list_cmp_curr);
+                tmp = __tlsValue(&tls_rd_list_cmp_curr);
+                *(void**)tmp = (void*)cmp;
+                rd_list_cmp_curr = ((int (*)(const void *, const void *))*tmp);
+#else
                 rd_list_cmp_curr = cmp;
+#endif
+ 
                 r = bsearch(&match /*ptrptr to match elems*/, rl->rl_elems,
                             rl->rl_cnt, sizeof(*rl->rl_elems),
                             rd_list_cmp_trampoline);
